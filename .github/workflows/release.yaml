name: Release

on:
  push:
    branches:
      - main

env:
  env_var: Docker

jobs:
  init:
    name: Initialize build
    runs-on: ubuntu-latest
    environment: production
    outputs:
      architectures: ${{ steps.info.outputs.architectures }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Test Work Dir
        run: |
          echo "${{ runner.temp }}"
          pwd
          ls -al
      - name: Get information
        id: info
        uses: home-assistant/actions/helpers/info@master
        with:
          path: "/home/runner/work/dnsmasq/dnsmasq"
  deploy:
    name: Build and publish
    runs-on: ubuntu-latest
    environment: production
    strategy:
      fail-fast: False
      matrix:
        architecture: ${{ fromJson(needs.init.outputs.architectures) }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2.0.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: sergeyitsib
#          password: dckr_pat_G9E1m9HMe-NA0erjjq-YUFn5pU4

#      - name: Build the builder
#        uses: home-assistant/builder@master
#        with:
#          args: |
#            --test \
#            --amd64 \
#            --target /dnsmasq-full \
#            --addon
#
#      - name: Test ${{ matrix.architecture }} builder
#        uses: ./
#        with:
#          args: |
#            --test \
#            --addon \
#            --${{ matrix.architecture }} \
#            --target /dnsmasq-full \
#            --docker-hub sergeyitsib \
#            --image image-${{ matrix.architecture }}-dnsmasq
